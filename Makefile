.PHONY: test test-unit test-feature test-coverage test-parallel test-watch help help-quick help-k8s sail-up sail-down sail-build install-sail setup helm-lint helm-template helm-deps helm-deploy-dev helm-deploy-staging helm-deploy-prod helm-status helm-uninstall helm-test k8s-logs k8s-shell k8s-port-forward k8s-dashboard-install k8s-dashboard-token k8s-dashboard-access k8s-dashboard-remove k8s-fix-certs k8s-fix-image-pull docker-build-k8s docker-build-k8s-dev docker-push-k8s

# –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∫–∞–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
.DEFAULT_GOAL := help-quick

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN := \033[32m
YELLOW := \033[33m
RED := \033[31m
BLUE := \033[34m
CYAN := \033[36m
RESET := \033[0m

# =============================================================================
# Kubernetes K8S Config (namespace + shell)
# =============================================================================

# –§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ .k8s:
# NAMESPACE=laravel-app-dev
# SHELL=/bin/sh

# 1. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: K8S_NAMESPACE, K8S_SHELL
# 2. –§–∞–π–ª .k8s (–∫–ª—é—á=–∑–Ω–∞—á–µ–Ω–∏–µ)
# 3. –î–µ—Ñ–æ–ª—Ç—ã: laravel-app-dev, /bin/sh

K8S_CONFIG_FILE := .k8s

# –ü–æ–ª—É—á–∏—Ç—å namespace
ifeq ($(origin K8S_NAMESPACE), environment)
    K8S_DEFAULT_NS := $(K8S_NAMESPACE)
else
    ifneq (,$(wildcard $(K8S_CONFIG_FILE)))
        K8S_DEFAULT_NS := $(shell grep '^NAMESPACE=' $(K8S_CONFIG_FILE) | cut -d'=' -f2)
        ifeq ($(K8S_DEFAULT_NS),)
            K8S_DEFAULT_NS := laravel-app-dev
        endif
    else
        K8S_DEFAULT_NS := laravel-app-dev
    endif
endif

# –ü–æ–ª—É—á–∏—Ç—å shell
ifeq ($(origin K8S_SHELL), environment)
    K8S_DEFAULT_SHELL := $(K8S_SHELL)
else
    ifneq (,$(wildcard $(K8S_CONFIG_FILE)))
        K8S_DEFAULT_SHELL := $(shell grep '^SHELL=' $(K8S_CONFIG_FILE) | cut -d'=' -f2)
        ifeq ($(K8S_DEFAULT_SHELL),)
            K8S_DEFAULT_SHELL := /bin/sh
        endif
    else
        K8S_DEFAULT_SHELL := /bin/sh
    endif
endif

# –ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è k8s config
k8s-config-set: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π namespace –∏ shell –¥–ª—è k8s –∫–æ–º–∞–Ω–¥
	@echo "$(BLUE)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ namespace –∏ shell –¥–ª—è k8s –∫–æ–º–∞–Ω–¥...$(RESET)"
	@read -p "Enter namespace (default: $(K8S_DEFAULT_NS)): " namespace; \
	namespace=$${namespace:-$(K8S_DEFAULT_NS)}; \
	read -p "Enter shell path (default: $(K8S_DEFAULT_SHELL)): " shell; \
	shell=$${shell:-$(K8S_DEFAULT_SHELL)}; \
	echo "NAMESPACE=$$namespace" > .k8s; \
	echo "SHELL=$$shell" >> .k8s; \
	echo "$(GREEN)–ö–æ–Ω—Ñ–∏–≥ .k8s –æ–±–Ω–æ–≤–ª—ë–Ω: NAMESPACE=$$namespace, SHELL=$$shell$(RESET)";

k8s-config-show: ## –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π namespace –∏ shell
	@echo "$(BLUE)–¢–µ–∫—É—â–∏–π k8s config:$(RESET)"
	@echo "  Namespace: $(GREEN)$(K8S_DEFAULT_NS)$(RESET)"
	@echo "  Shell:     $(GREEN)$(K8S_DEFAULT_SHELL)$(RESET)"
	@if [ -f .k8s ]; then \
		echo "$(CYAN)–ò—Å—Ç–æ—á–Ω–∏–∫: —Ñ–∞–π–ª .k8s$(RESET)"; \
	elif [ -n "$(K8S_NAMESPACE)" ] || [ -n "$(K8S_SHELL)" ]; then \
		echo "$(CYAN)–ò—Å—Ç–æ—á–Ω–∏–∫: –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è$(RESET)"; \
	else \
		echo "$(CYAN)–ò—Å—Ç–æ—á–Ω–∏–∫: –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è$(RESET)"; \
	fi

k8s-config-reset: ## –°–±—Ä–æ—Å–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π namespace –∏ shell –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
	@echo "$(BLUE)–°–±—Ä–æ—Å k8s config...$(RESET)"
	@rm -f .k8s; \
	echo "$(GREEN)–ö–æ–Ω—Ñ–∏–≥ .k8s —Å–±—Ä–æ—à–µ–Ω –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é$(RESET)"

k8s-config-env: ## –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
	@echo "$(BLUE)–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:$(RESET)"
	@echo "$(YELLOW)export K8S_NAMESPACE=laravel-app-dev$(RESET)"
	@echo "$(YELLOW)export K8S_SHELL=/bin/sh$(RESET)"
	@echo "$(YELLOW)export K8S_SHELL=/bin/bash$(RESET)"
	@echo ""
	@echo "$(CYAN)–î–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ ~/.bashrc –∏–ª–∏ ~/.zshrc:$(RESET)"
	@echo "$(YELLOW)echo 'export K8S_NAMESPACE=laravel-app-dev' >> ~/.bashrc$(RESET)"
	@echo "$(YELLOW)echo 'export K8S_SHELL=/bin/bash' >> ~/.bashrc$(RESET)"

# –ê–ª–∏–∞—Å—ã
k8s-cfg: k8s-config-show
k8s-cfg-set: k8s-config-set
k8s-cfg-reset: k8s-config-reset
k8s-cfg-env: k8s-config-env

# Docker/Sail –∫–æ–º–∞–Ω–¥—ã
SAIL := vendor/bin/sail
PEST := $(SAIL) pest

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "$(BLUE)üìö Laravel Example App - –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(RESET)"
	@echo ""
	@echo "$(GREEN)üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:$(RESET)"
	@echo "  $(YELLOW)setup$(RESET)                          –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ Docker (–ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫)"
	@echo "  $(YELLOW)sail-up$(RESET)                        –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  $(YELLOW)sail-down$(RESET)                      –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo ""
	@echo "$(GREEN)üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:$(RESET)"
	@grep -E '^test[a-zA-Z_-]*:.*## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*## "}; {printf "  $(YELLOW)%-30s$(RESET) %s\n", $$1, $$2}'
	@echo ""
	@echo "$(GREEN)üîß –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:$(RESET)"
	@echo "  $(YELLOW)install$(RESET)                        –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ Docker"
	@echo "  $(YELLOW)update$(RESET)                         –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ Docker"
	@echo "  $(YELLOW)clean$(RESET)                          –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ Docker"
	@echo "  $(YELLOW)migrate$(RESET)                        –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ Docker"
	@echo "  $(YELLOW)migrate-fresh$(RESET)                  –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏"
	@echo "  $(YELLOW)seed$(RESET)                           –ó–∞–ø—É—Å—Ç–∏—Ç—å seeders –≤ Docker"
	@echo ""
	@echo "$(GREEN)üé® Frontend:$(RESET)"
	@echo "  $(YELLOW)npm-install$(RESET)                    –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ Docker"
	@echo "  $(YELLOW)npm-dev$(RESET)                        –ó–∞–ø—É—Å—Ç–∏—Ç—å npm dev –≤ Docker"
	@echo "  $(YELLOW)npm-build$(RESET)                      –°–æ–±—Ä–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ Docker"
	@echo ""
	@echo "$(GREEN)üîç –õ–∏–Ω—Ç–∏–Ω–≥ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞:$(RESET)"
	@echo "  $(YELLOW)lint$(RESET)                           –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ª–∏–Ω—Ç–µ—Ä—ã –≤ Docker"
	@echo "  $(YELLOW)lint-fix$(RESET)                       –ò—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ –æ—à–∏–±–∫–∏ –ª–∏–Ω—Ç–µ—Ä–æ–≤ –≤ Docker"
	@echo "  $(YELLOW)eslint$(RESET)                         –ó–∞–ø—É—Å—Ç–∏—Ç—å ESLint –¥–ª—è JS/TS –≤ Docker"
	@echo "  $(YELLOW)eslint-fix$(RESET)                     –ò—Å–ø—Ä–∞–≤–∏—Ç—å JS/TS —Å ESLint –≤ Docker"
	@echo "  $(YELLOW)stylelint$(RESET)                      –ó–∞–ø—É—Å—Ç–∏—Ç—å Stylelint –¥–ª—è CSS/SCSS –≤ Docker"
	@echo "  $(YELLOW)stylelint-fix$(RESET)                  –ò—Å–ø—Ä–∞–≤–∏—Ç—å CSS/SCSS —Å Stylelint –≤ Docker"
	@echo "  $(YELLOW)prettier$(RESET)                       –ó–∞–ø—É—Å—Ç–∏—Ç—å Prettier –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Docker"
	@echo "  $(YELLOW)prettier-fix$(RESET)                   –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å Prettier –≤ Docker"
	@echo ""
	@echo "$(GREEN)üê≥ Docker/Sail:$(RESET)"
	@grep -E '^sail-[a-zA-Z_-]+:.*## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*## "}; {printf "  $(YELLOW)%-30s$(RESET) %s\n", $$1, $$2}'
	@echo ""
	@echo "$(GREEN)üî® –£—Ç–∏–ª–∏—Ç—ã:$(RESET)"
	@echo "  $(YELLOW)artisan$(RESET)                        –í—ã–ø–æ–ª–Ω–∏—Ç—å artisan –∫–æ–º–∞–Ω–¥—É (make artisan CMD=\"route:list\")"
	@echo "  $(YELLOW)composer$(RESET)                       –í—ã–ø–æ–ª–Ω–∏—Ç—å composer –∫–æ–º–∞–Ω–¥—É (make composer CMD=\"require package\")"
	@echo "  $(YELLOW)install-sail$(RESET)                   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Laravel Sail (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)"
	@echo ""
	@echo "$(GREEN)üè† –õ–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–±–µ–∑ Docker):$(RESET)"
	@echo "  $(YELLOW)test-local$(RESET)                     –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ª–æ–∫–∞–ª—å–Ω–æ (–±–µ–∑ Docker)"
	@echo "  $(YELLOW)install-local$(RESET)                  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–æ"
	@echo ""
	@echo "$(GREEN)‚ò∏Ô∏è  Kubernetes:$(RESET)"
	@echo "  $(YELLOW)k8s-logs$(RESET)                       –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
	@echo "  $(YELLOW)k8s-shell$(RESET)                      Shell –≤ pod"
	@echo "  $(YELLOW)k8s-status$(RESET)                     –°—Ç–∞—Ç—É—Å —Ä–µ—Å—É—Ä—Å–æ–≤"
	@echo "  $(YELLOW)k8s-port-forward$(RESET)               –ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤"
	@echo "  $(YELLOW)k8s-artisan$(RESET)                    Artisan –∫–æ–º–∞–Ω–¥–∞"
	@echo "  $(YELLOW)k8s-scale$(RESET)                      –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å"
	@echo ""
	@echo "$(BLUE)üí° –°–ø—Ä–∞–≤–∫–∞:$(RESET)"
	@echo "  $(YELLOW)help$(RESET)                           –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É (–≤—Å–µ –∫–æ–º–∞–Ω–¥—ã)"
	@echo "  $(YELLOW)help-quick$(RESET)                     –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"
	@echo "  $(YELLOW)help-k8s$(RESET)                       –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ Kubernetes/Helm –∫–æ–º–∞–Ω–¥—ã"
	@echo ""
	@echo "$(CYAN)üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:$(RESET)"
	@echo "  README.md           - –û—Å–Ω–æ–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞"
	@echo "  KUBERNETES.md       - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ Kubernetes"
	@echo "  DOCKER.md           - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ Docker"
	@echo "  TESTING.md          - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é"
	@echo "  docker/k8s/README.md - Docker –¥–ª—è Kubernetes"

help-quick: ## –ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
	@echo "$(BLUE)‚ö° –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã Laravel Example App:$(RESET)"
	@echo ""
	@echo "$(GREEN)üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:$(RESET)"
	@echo "  $(YELLOW)make setup$(RESET)          - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–µ–∫—Ç (–ø–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫)"
	@echo "  $(YELLOW)make up$(RESET)             - –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo "  $(YELLOW)make down$(RESET)           - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
	@echo ""
	@echo "$(GREEN)üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:$(RESET)"
	@echo "  $(YELLOW)make t$(RESET)              - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã"
	@echo "  $(YELLOW)make tc$(RESET)             - –¢–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞"
	@echo "  $(YELLOW)make tw$(RESET)             - –¢–µ—Å—Ç—ã –≤ —Ä–µ–∂–∏–º–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è"
	@echo ""
	@echo "$(GREEN)üîß –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:$(RESET)"
	@echo "  $(YELLOW)make migrate$(RESET)        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏"
	@echo "  $(YELLOW)make clean$(RESET)          - –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à"
	@echo "  $(YELLOW)make shell$(RESET)          - –í–æ–π—Ç–∏ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
	@echo ""
	@echo "$(GREEN)üîç –õ–∏–Ω—Ç–∏–Ω–≥:$(RESET)"
	@echo "  $(YELLOW)make lint$(RESET)           - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ª–∏–Ω—Ç–µ—Ä—ã"
	@echo "  $(YELLOW)make lint-fix$(RESET)       - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ –æ—à–∏–±–∫–∏"
	@echo "  $(YELLOW)make eslint-fix$(RESET)     - –ò—Å–ø—Ä–∞–≤–∏—Ç—å JS/TS –æ—à–∏–±–∫–∏"
	@echo ""
	@echo "$(GREEN)‚ò∏Ô∏è  Kubernetes:$(RESET)"
	@echo "  $(YELLOW)make k8s-logs$(RESET)        - –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
	@echo "  $(YELLOW)make k8s-shell$(RESET)       - Shell –≤ pod"
	@echo "  $(YELLOW)make k8s-status$(RESET)      - –°—Ç–∞—Ç—É—Å —Ä–µ—Å—É—Ä—Å–æ–≤"
	@echo "  $(YELLOW)make k8s-port-forward$(RESET) - –ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤"
	@echo "  $(YELLOW)make k8s-artisan$(RESET)     - Artisan –∫–æ–º–∞–Ω–¥–∞"
	@echo "  $(YELLOW)make k8s-scale$(RESET)       - –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å"
	@echo ""
	@echo "$(CYAN)–ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: $(YELLOW)make help$(RESET) –∏–ª–∏ $(YELLOW)make help-k8s$(RESET)"

help-k8s: ## –ü–æ–∫–∞–∑–∞—Ç—å Kubernetes/Helm –∫–æ–º–∞–Ω–¥—ã
	@echo "$(BLUE)Kubernetes –∏ Helm –∫–æ–º–∞–Ω–¥—ã:$(RESET)"
	@echo "$(GREEN)–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Namespace:$(RESET)"
	@echo "  $(YELLOW)k8s-namespace-set$(RESET)        –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π namespace –¥–ª—è k8s –∫–æ–º–∞–Ω–¥"
	@echo "  $(YELLOW)k8s-namespace-show$(RESET)       –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π namespace"
	@echo "  $(YELLOW)k8s-namespace-reset$(RESET)      –°–±—Ä–æ—Å–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π namespace"
	@echo "  $(YELLOW)k8s-namespace-env$(RESET)        –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é"
	@echo "  $(YELLOW)k8s-ns$(RESET)                   –ê–ª–∏–∞—Å –¥–ª—è k8s-namespace-show"
	@echo "  $(YELLOW)k8s-ns-set$(RESET)               –ê–ª–∏–∞—Å –¥–ª—è k8s-namespace-set"
	@echo "  $(YELLOW)k8s-ns-reset$(RESET)             –ê–ª–∏–∞—Å –¥–ª—è k8s-namespace-reset"
	@echo ""
	@echo "$(GREEN)–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Shell:$(RESET)"
	@echo "  $(YELLOW)k8s-shell-set$(RESET)            –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π shell –¥–ª—è k8s –∫–æ–º–∞–Ω–¥"
	@echo "  $(YELLOW)k8s-shell-show$(RESET)           –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π shell"
	@echo "  $(YELLOW)k8s-shell-reset$(RESET)          –°–±—Ä–æ—Å–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π shell"
	@echo "  $(YELLOW)k8s-shell-env$(RESET)            –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é"
	@echo "  $(YELLOW)k8s-sh$(RESET)                   –ê–ª–∏–∞—Å –¥–ª—è k8s-shell-show"
	@echo "  $(YELLOW)k8s-sh-set$(RESET)               –ê–ª–∏–∞—Å –¥–ª—è k8s-shell-set"
	@echo "  $(YELLOW)k8s-sh-reset$(RESET)             –ê–ª–∏–∞—Å –¥–ª—è k8s-shell-reset"
	@echo ""
	@echo "$(GREEN)Docker –¥–ª—è Kubernetes:$(RESET)"
	@echo "  $(YELLOW)docker-build-k8s$(RESET)           –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑ –¥–ª—è Kubernetes (production)"
	@echo "  $(YELLOW)docker-build-k8s-dev$(RESET)       –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑ –¥–ª—è Kubernetes (development)"
	@echo "  $(YELLOW)docker-push-k8s$(RESET)            –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—Ä–∞–∑ –≤ Microk8s registry"
	@echo ""
	@echo "$(GREEN)Helm –∫–æ–º–∞–Ω–¥—ã:$(RESET)"
	@grep -E '^helm-[a-zA-Z_-]+:.*## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*## "}; {printf "  $(YELLOW)%-30s$(RESET) %s\n", $$1, $$2}'
	@echo ""
	@echo "$(GREEN)Kubernetes –∫–æ–º–∞–Ω–¥—ã:$(RESET)"
	@grep -E '^k8s-[a-zA-Z_-]+:.*## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*## "}; {printf "  $(YELLOW)%-30s$(RESET) %s\n", $$1, $$2}'
	@echo ""
	@echo "$(GREEN)üöÄ –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã Kubernetes (–∞–ª–∏–∞—Å—ã):$(RESET)"
	@echo "  $(YELLOW)k8s-l$(RESET)   ‚Üí k8s-logs                    $(YELLOW)k8s-s$(RESET)   ‚Üí k8s-shell"
	@echo "  $(YELLOW)k8s-lp$(RESET)  ‚Üí k8s-logs-php                $(YELLOW)k8s-sp$(RESET)  ‚Üí k8s-shell-php"
	@echo "  $(YELLOW)k8s-ln$(RESET)  ‚Üí k8s-logs-nginx              $(YELLOW)k8s-sn$(RESET)  ‚Üí k8s-shell-nginx"
	@echo "  $(YELLOW)k8s-lq$(RESET)  ‚Üí k8s-logs-queue              $(YELLOW)k8s-sq$(RESET)  ‚Üí k8s-shell-queue"
	@echo "  $(YELLOW)k8s-sf$(RESET)  ‚Üí k8s-shell-first             $(YELLOW)k8s-pf$(RESET)  ‚Üí k8s-port-forward"
	@echo "  $(YELLOW)k8s-st$(RESET)  ‚Üí k8s-status                  $(YELLOW)k8s-d$(RESET)   ‚Üí k8s-describe"
	@echo "  $(YELLOW)k8s-sc$(RESET)  ‚Üí k8s-scale                   $(YELLOW)k8s-sch$(RESET) ‚Üí k8s-scale-helm"
	@echo "  $(YELLOW)k8s-a$(RESET)   ‚Üí k8s-artisan                 $(YELLOW)k8s-m$(RESET)   ‚Üí k8s-migrate"
	@echo "  $(YELLOW)k8s-mf$(RESET)  ‚Üí k8s-migrate-fresh           $(YELLOW)k8s-se$(RESET)  ‚Üí k8s-seed"
	@echo "  $(YELLOW)k8s-cc$(RESET)  ‚Üí k8s-cache-clear             $(YELLOW)k8s-cac$(RESET) ‚Üí k8s-config-cache"
	@echo "  $(YELLOW)k8s-qw$(RESET)  ‚Üí k8s-queue-work              $(YELLOW)k8s-qf$(RESET)  ‚Üí k8s-queue-failed"
	@echo "  $(YELLOW)k8s-qr$(RESET)  ‚Üí k8s-queue-retry             $(YELLOW)k8s-qfl$(RESET) ‚Üí k8s-queue-flush"
	@echo "  $(YELLOW)k8s-r$(RESET)   ‚Üí k8s-restart                 $(YELLOW)k8s-rb$(RESET)  ‚Üí k8s-rollback"
	@echo "  $(YELLOW)k8s-rbt$(RESET) ‚Üí k8s-rollback-to            $(YELLOW)k8s-rs$(RESET)  ‚Üí k8s-rollout-status"
	@echo "  $(YELLOW)k8s-rh$(RESET)  ‚Üí k8s-rollout-history         $(YELLOW)k8s-t$(RESET)   ‚Üí k8s-top"
	@echo "  $(YELLOW)k8s-e$(RESET)   ‚Üí k8s-events                  $(YELLOW)k8s-i$(RESET)   ‚Üí k8s-ingress-status"
	@echo "  $(YELLOW)k8s-pvc$(RESET) ‚Üí k8s-pvc-status              $(YELLOW)k8s-sv$(RESET)  ‚Üí k8s-secret-view"
	@echo "  $(YELLOW)k8s-cmv$(RESET) ‚Üí k8s-configmap-view          $(YELLOW)k8s-ea$(RESET)  ‚Üí k8s-exec-all"

# =============================================================================
# Docker/Sail –∫–æ–º–∞–Ω–¥—ã
# =============================================================================

sail-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(RESET)"
	$(SAIL) up -d

sail-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(BLUE)–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(RESET)"
	$(SAIL) down

sail-build: ## –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
	@echo "$(BLUE)–ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(RESET)"
	$(SAIL) build --no-cache

sail-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	@echo "$(BLUE)–ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...$(RESET)"
	$(SAIL) logs -f

sail-shell: ## –í–æ–π—Ç–∏ –≤ shell –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@echo "$(BLUE)–í—Ö–æ–¥ –≤ shell –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞...$(RESET)"
	$(SAIL) shell

# =============================================================================
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
# =============================================================================

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –≤ Docker...$(RESET)"
	$(PEST)

test-unit: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ Unit —Ç–µ—Å—Ç—ã –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ Unit —Ç–µ—Å—Ç–æ–≤ –≤ Docker...$(RESET)"
	$(PEST) tests/Unit

test-feature: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ Feature —Ç–µ—Å—Ç—ã –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ Feature —Ç–µ—Å—Ç–æ–≤ –≤ Docker...$(RESET)"
	$(PEST) tests/Feature

test-coverage: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞ –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∫–æ–¥–∞ –≤ Docker...$(RESET)"
	$(PEST) --coverage

test-coverage-html: ## –°–æ–∑–¥–∞—Ç—å HTML –æ—Ç—á–µ—Ç –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –≤ Docker
	@echo "$(GREEN)–°–æ–∑–¥–∞–Ω–∏–µ HTML –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –≤ Docker...$(RESET)"
	$(PEST) --coverage-html=coverage-report

test-parallel: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –≤ Docker...$(RESET)"
	$(PEST) --parallel

test-watch: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –≤ —Ä–µ–∂–∏–º–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≤ —Ä–µ–∂–∏–º–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –≤ Docker...$(RESET)"
	$(PEST) --watch

test-group: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã (make test-group GROUP=auth)
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –≥—Ä—É–ø–ø—ã $(GROUP) –≤ Docker...$(RESET)"
	$(PEST) --group=$(GROUP)

test-filter: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å —Ñ–∏–ª—å—Ç—Ä–æ–º (make test-filter FILTER="User Model")
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–æ–º '$(FILTER)' –≤ Docker...$(RESET)"
	$(PEST) --filter="$(FILTER)"

test-debug: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –æ—Ç–ª–∞–¥–∫–æ–π –≤ Docker...$(RESET)"
	$(PEST) --debug

test-verbose: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –≤—ã–≤–æ–¥–æ–º –≤ Docker...$(RESET)"
	$(PEST) --verbose

# =============================================================================
# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
# =============================================================================

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ Docker
	@echo "$(GREEN)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ Docker...$(RESET)"
	$(SAIL) composer install

update: ## –û–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ Docker
	@echo "$(GREEN)–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ Docker...$(RESET)"
	$(SAIL) composer update

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –≤ Docker
	@echo "$(GREEN)–û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –≤ Docker...$(RESET)"
	$(SAIL) artisan cache:clear
	$(SAIL) artisan config:clear
	$(SAIL) artisan route:clear
	$(SAIL) artisan view:clear
	rm -rf coverage-report/

migrate: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ Docker...$(RESET)"
	$(SAIL) artisan migrate

migrate-fresh: ## –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
	@echo "$(GREEN)–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ Docker...$(RESET)"
	$(SAIL) artisan migrate:fresh --seed

seed: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å seeders –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ seeders –≤ Docker...$(RESET)"
	$(SAIL) artisan db:seed

install-sail: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Laravel Sail (–µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
	@echo "$(BLUE)–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Laravel Sail...$(RESET)"
	@if [ ! -f "vendor/bin/sail" ]; then \
		echo "$(YELLOW)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ Docker...$(RESET)"; \
		docker run --rm -u "$$(id -u):$$(id -g)" -v "$$(pwd):/var/www/html" -w /var/www/html laravelsail/php84-composer:latest composer install --ignore-platform-reqs; \
	else \
		echo "$(GREEN)‚úÖ Laravel Sail —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(RESET)"; \
	fi

setup: install-sail ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –≤ Docker
	@echo "$(GREEN)–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤ Docker...$(RESET)"
	@if [ ! -f .env ]; then cp .env.example .env; fi
	$(SAIL) up -d
	$(SAIL) composer install
	$(SAIL) artisan key:generate
	$(SAIL) artisan migrate:fresh --seed
	@echo "$(GREEN)–ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –î–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost$(RESET)"

# =============================================================================
# –£—Ç–∏–ª–∏—Ç—ã
# =============================================================================

npm-install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤ Docker
	@echo "$(GREEN)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –≤ Docker...$(RESET)"
	$(SAIL) npm install

npm-dev: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å npm dev –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ npm dev –≤ Docker...$(RESET)"
	$(SAIL) npm run dev

npm-build: ## –°–æ–±—Ä–∞—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ Docker
	@echo "$(GREEN)–°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ Docker...$(RESET)"
	$(SAIL) npm run build

artisan: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å artisan –∫–æ–º–∞–Ω–¥—É (make artisan CMD="route:list")
	@echo "$(GREEN)–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ artisan $(CMD) –≤ Docker...$(RESET)"
	$(SAIL) artisan $(CMD)

composer: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å composer –∫–æ–º–∞–Ω–¥—É (make composer CMD="require package")
	@echo "$(GREEN)–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ composer $(CMD) –≤ Docker...$(RESET)"
	$(SAIL) composer $(CMD)

# =============================================================================
# –õ–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã (–±–µ–∑ Docker)
# =============================================================================

test-local: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã –ª–æ–∫–∞–ª—å–Ω–æ (–±–µ–∑ Docker)
	@echo "$(YELLOW)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ª–æ–∫–∞–ª—å–Ω–æ...$(RESET)"
	./vendor/bin/pest

install-local: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ª–æ–∫–∞–ª—å–Ω–æ
	@echo "$(YELLOW)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ª–æ–∫–∞–ª—å–Ω–æ...$(RESET)"
	composer install

# =============================================================================
# Helm/Kubernetes –∫–æ–º–∞–Ω–¥—ã
# =============================================================================

helm-lint: ## –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Helm chart
	@echo "$(BLUE)–ü—Ä–æ–≤–µ—Ä–∫–∞ Helm chart...$(RESET)"
	helm lint helm/laravel-app

helm-template: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ Kubernetes –º–∞–Ω–∏—Ñ–µ—Å—Ç—ã
	@echo "$(BLUE)–ì–µ–Ω–µ—Ä–∞—Ü–∏—è Kubernetes –º–∞–Ω–∏—Ñ–µ—Å—Ç–æ–≤...$(RESET)"
	helm template laravel-app helm/laravel-app --values helm/laravel-app/values-dev.yaml

helm-deps: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Helm chart
	@echo "$(BLUE)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π Helm chart...$(RESET)"
	cd helm/laravel-app && helm dependency build

helm-deploy-dev: ## –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤ development –æ–∫—Ä—É–∂–µ–Ω–∏–∏
	@echo "$(BLUE)–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ development...$(RESET)"
	./helm/deploy.sh dev

helm-deploy-staging: ## –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤ staging –æ–∫—Ä—É–∂–µ–Ω–∏–∏
	@echo "$(BLUE)–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ staging...$(RESET)"
	./helm/deploy.sh staging

helm-deploy-prod: ## –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –≤ production –æ–∫—Ä—É–∂–µ–Ω–∏–∏
	@echo "$(BLUE)–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ production...$(RESET)"
	./helm/deploy.sh prod

helm-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å Helm —Ä–µ–ª–∏–∑–∞
	@echo "$(BLUE)–°—Ç–∞—Ç—É—Å Helm —Ä–µ–ª–∏–∑–∞...$(RESET)"
	@read -p "Enter release name (default: laravel-app): " release; \
	release=$${release:-laravel-app}; \
	read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	helm status $$release -n $$namespace

helm-uninstall: ## –£–¥–∞–ª–∏—Ç—å Helm —Ä–µ–ª–∏–∑
	@echo "$(RED)–£–¥–∞–ª–µ–Ω–∏–µ Helm —Ä–µ–ª–∏–∑–∞...$(RESET)"
	@read -p "Enter release name (default: laravel-app): " release; \
	release=$${release:-laravel-app}; \
	read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	echo "$(RED)WARNING: This will delete the release $$release in namespace $$namespace$(RESET)"; \
	read -p "Are you sure? (yes/no): " confirm; \
	if [ "$$confirm" = "yes" ]; then helm uninstall $$release -n $$namespace; fi

helm-test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã Helm chart
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ Helm chart...$(RESET)"
	./helm/test-chart.sh

k8s-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ Kubernetes
	@echo "$(BLUE)–õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ namespace $(K8S_DEFAULT_NS)...$(RESET)"
	kubectl logs -n $(K8S_DEFAULT_NS) -l app.kubernetes.io/name=laravel-app -f

k8s-logs-php: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ PHP-FPM –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "$(BLUE)–õ–æ–≥–∏ PHP-FPM –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ namespace $(K8S_DEFAULT_NS)...$(RESET)"
	kubectl logs -n $(K8S_DEFAULT_NS) -l app.kubernetes.io/name=laravel-app -c php-fpm -f

k8s-logs-nginx: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "$(BLUE)–õ–æ–≥–∏ Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ namespace $(K8S_DEFAULT_NS)...$(RESET)"
	kubectl logs -n $(K8S_DEFAULT_NS) -l app.kubernetes.io/name=laravel-app -c nginx -f

k8s-logs-queue: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Queue Worker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "$(BLUE)–õ–æ–≥–∏ Queue Worker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ namespace $(K8S_DEFAULT_NS)...$(RESET)"
	kubectl logs -n $(K8S_DEFAULT_NS) -l app.kubernetes.io/name=laravel-app -c queue -f

k8s-shell: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ shell –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "$(BLUE)–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ shell –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ namespace $(K8S_DEFAULT_NS) —Å shell $(K8S_DEFAULT_SHELL)...$(RESET)"
	kubectl exec -n $(K8S_DEFAULT_NS) -it deployment/laravel-app -- $(K8S_DEFAULT_SHELL)

k8s-shell-php: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ shell PHP-FPM –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "$(BLUE)–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ shell PHP-FPM –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ namespace $(K8S_DEFAULT_NS) —Å shell $(K8S_DEFAULT_SHELL)...$(RESET)"
	kubectl exec -n $(K8S_DEFAULT_NS) -it deployment/laravel-app -c php-fpm -- $(K8S_DEFAULT_SHELL)

k8s-shell-nginx: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ shell Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "$(BLUE)–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ shell Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ namespace $(K8S_DEFAULT_NS) —Å shell $(K8S_DEFAULT_SHELL)...$(RESET)"
	kubectl exec -n $(K8S_DEFAULT_NS) -it deployment/laravel-app -c nginx -- $(K8S_DEFAULT_SHELL)

k8s-shell-queue: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ shell Queue Worker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
	@echo "$(BLUE)–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ shell Queue Worker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –≤ namespace $(K8S_DEFAULT_NS) —Å shell $(K8S_DEFAULT_SHELL)...$(RESET)"
	kubectl exec -n $(K8S_DEFAULT_NS) -it deployment/laravel-app -c queue -- $(K8S_DEFAULT_SHELL)

k8s-shell-first: ## –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ shell –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ pod
	@echo "$(BLUE)–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ shell –ø–µ—Ä–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ pod –≤ namespace $(K8S_DEFAULT_NS) —Å shell $(K8S_DEFAULT_SHELL)...$(RESET)"
	@pod=$$(kubectl get pods -n $(K8S_DEFAULT_NS) -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ pod: $$pod$(RESET)"; \
	kubectl exec -n $(K8S_DEFAULT_NS) -it $$pod -c php-fpm -- $(K8S_DEFAULT_SHELL)

k8s-port-forward: ## –ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
	@echo "$(BLUE)–ü—Ä–æ–±—Ä–æ—Å –ø–æ—Ä—Ç–æ–≤ –≤ namespace $(K8S_DEFAULT_NS)...$(RESET)"
	kubectl port-forward -n $(K8S_DEFAULT_NS) svc/laravel-app 8080:80

k8s-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@echo "$(BLUE)–°—Ç–∞—Ç—É—Å —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ namespace $(K8S_DEFAULT_NS)...$(RESET)"
	echo "$(GREEN)Pods:$(RESET)"; \
	kubectl get pods -n $(K8S_DEFAULT_NS) -l app.kubernetes.io/name=laravel-app; \
	echo "$(GREEN)Services:$(RESET)"; \
	kubectl get svc -n $(K8S_DEFAULT_NS) -l app.kubernetes.io/name=laravel-app; \
	echo "$(GREEN)Deployments:$(RESET)"; \
	kubectl get deployments -n $(K8S_DEFAULT_NS) -l app.kubernetes.io/name=laravel-app; \
	echo "$(GREEN)ConfigMaps:$(RESET)"; \
	kubectl get configmaps -n $(K8S_DEFAULT_NS) -l app.kubernetes.io/name=laravel-app; \
	echo "$(GREEN)Secrets:$(RESET)"; \
	kubectl get secrets -n $(K8S_DEFAULT_NS) -l app.kubernetes.io/name=laravel-app

k8s-describe: ## –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Å—É—Ä—Å–∞—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
	@echo "$(BLUE)–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Å—É—Ä—Å–∞—Ö...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	echo "$(GREEN)Deployment:$(RESET)"; \
	kubectl describe deployment laravel-app -n $$namespace; \
	echo "$(GREEN)Service:$(RESET)"; \
	kubectl describe svc laravel-app -n $$namespace

k8s-scale: ## –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
	@echo "$(BLUE)–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "Enter number of replicas: " replicas; \
	kubectl scale deployment laravel-app -n $$namespace --replicas=$$replicas; \
	echo "$(GREEN)–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–æ –¥–æ $$replicas —Ä–µ–ø–ª–∏–∫$(RESET)"

k8s-scale-helm: ## –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Helm
	@echo "$(BLUE)–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Helm...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "Enter number of replicas: " replicas; \
	helm upgrade laravel-app helm/laravel-app -n $$namespace --set replicaCount=$$replicas --values helm/laravel-app/values-dev.yaml; \
	echo "$(GREEN)–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–æ –¥–æ $$replicas —Ä–µ–ø–ª–∏–∫ —á–µ—Ä–µ–∑ Helm$(RESET)"

k8s-artisan: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å artisan –∫–æ–º–∞–Ω–¥—É –≤ Kubernetes
	@echo "$(BLUE)–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ artisan –∫–æ–º–∞–Ω–¥—ã –≤ Kubernetes...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "Enter artisan command (e.g., route:list): " cmd; \
	pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: php artisan $$cmd –≤ pod $$pod$(RESET)"; \
	kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan $$cmd

k8s-migrate: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ Kubernetes
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ Kubernetes...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –≤ pod $$pod$(RESET)"; \
	kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan migrate

k8s-migrate-fresh: ## –ü–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏
	@echo "$(RED)–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ Kubernetes...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö? (yes/no): " confirm; \
	if [ "$$confirm" = "yes" ]; then \
		pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
		echo "$(GREEN)–ü–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏–µ –ë–î –≤ pod $$pod$(RESET)"; \
		kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan migrate:fresh --seed; \
	else \
		echo "$(YELLOW)–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞$(RESET)"; \
	fi

k8s-seed: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å seeders –≤ Kubernetes
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ seeders –≤ Kubernetes...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–ó–∞–ø—É—Å–∫ seeders –≤ pod $$pod$(RESET)"; \
	kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan db:seed

k8s-cache-clear: ## –û—á–∏—Å—Ç–∏—Ç—å –∫–µ—à –≤ Kubernetes
	@echo "$(BLUE)–û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –≤ Kubernetes...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –≤ pod $$pod$(RESET)"; \
	kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan cache:clear; \
	kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan config:clear; \
	kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan route:clear; \
	kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan view:clear

k8s-config-cache: ## –°–æ–∑–¥–∞—Ç—å –∫–µ—à –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ Kubernetes
	@echo "$(BLUE)–°–æ–∑–¥–∞–Ω–∏–µ –∫–µ—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ Kubernetes...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–°–æ–∑–¥–∞–Ω–∏–µ –∫–µ—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤ pod $$pod$(RESET)"; \
	kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan config:cache; \
	kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan route:cache; \
	kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan view:cache

k8s-queue-work: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å queue worker –≤—Ä—É—á–Ω—É—é
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ queue worker –≤—Ä—É—á–Ω—É—é...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–ó–∞–ø—É—Å–∫ queue worker –≤ pod $$pod$(RESET)"; \
	kubectl exec -n $$namespace $$pod -c queue-worker -- php artisan queue:work

k8s-queue-failed: ## –ü–æ–∫–∞–∑–∞—Ç—å –Ω–µ—É–¥–∞—á–Ω—ã–µ –∑–∞–¥–∞—á–∏
	@echo "$(BLUE)–ù–µ—É–¥–∞—á–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤ –æ—á–µ—Ä–µ–¥–∏...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–ù–µ—É–¥–∞—á–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤ pod $$pod$(RESET)"; \
	kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan queue:failed

k8s-queue-retry: ## –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –Ω–µ—É–¥–∞—á–Ω—ã–µ –∑–∞–¥–∞—á–∏
	@echo "$(BLUE)–ü–æ–≤—Ç–æ—Ä –Ω–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–¥–∞—á...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "Enter job ID (or 'all' for all failed jobs): " job_id; \
	pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–ü–æ–≤—Ç–æ—Ä –∑–∞–¥–∞—á –≤ pod $$pod$(RESET)"; \
	if [ "$$job_id" = "all" ]; then \
		kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan queue:retry all; \
	else \
		kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan queue:retry $$job_id; \
	fi

k8s-queue-flush: ## –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –Ω–µ—É–¥–∞—á–Ω—ã–µ –∑–∞–¥–∞—á–∏
	@echo "$(RED)–û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –Ω–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–¥–∞—á...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –Ω–µ—É–¥–∞—á–Ω—ã–µ –∑–∞–¥–∞—á–∏? (yes/no): " confirm; \
	if [ "$$confirm" = "yes" ]; then \
		pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
		echo "$(GREEN)–û—á–∏—Å—Ç–∫–∞ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –∑–∞–¥–∞—á –≤ pod $$pod$(RESET)"; \
		kubectl exec -n $$namespace $$pod -c php-fpm -- php artisan queue:flush; \
	else \
		echo "$(YELLOW)–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞$(RESET)"; \
	fi

k8s-restart: ## –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å deployment
	@echo "$(BLUE)–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ deployment...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	kubectl rollout restart deployment/laravel-app -n $$namespace; \
	echo "$(GREEN)Deployment –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω$(RESET)"

k8s-rollback: ## –û—Ç–∫–∞—Ç–∏—Ç—å deployment –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏
	@echo "$(BLUE)–û—Ç–∫–∞—Ç deployment...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	kubectl rollout undo deployment/laravel-app -n $$namespace; \
	echo "$(GREEN)Deployment –æ—Ç–∫–∞—á–µ–Ω$(RESET)"

k8s-rollback-to: ## –û—Ç–∫–∞—Ç–∏—Ç—å deployment –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏
	@echo "$(BLUE)–û—Ç–∫–∞—Ç deployment –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "Enter revision number: " revision; \
	kubectl rollout undo deployment/laravel-app -n $$namespace --to-revision=$$revision; \
	echo "$(GREEN)Deployment –æ—Ç–∫–∞—á–µ–Ω –∫ –≤–µ—Ä—Å–∏–∏ $$revision$(RESET)"

k8s-rollout-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å rollout
	@echo "$(BLUE)–°—Ç–∞—Ç—É—Å rollout...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	kubectl rollout status deployment/laravel-app -n $$namespace

k8s-rollout-history: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é rollout
	@echo "$(BLUE)–ò—Å—Ç–æ—Ä–∏—è rollout...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	kubectl rollout history deployment/laravel-app -n $$namespace

k8s-top: ## –ü–æ–∫–∞–∑–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
	@echo "$(BLUE)–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	kubectl top pods -n $$namespace -l app.kubernetes.io/name=laravel-app

k8s-events: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–±—ã—Ç–∏—è –≤ namespace
	@echo "$(BLUE)–°–æ–±—ã—Ç–∏—è –≤ namespace...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	kubectl get events -n $$namespace --sort-by='.lastTimestamp'

k8s-ingress-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å Ingress
	@echo "$(BLUE)–°—Ç–∞—Ç—É—Å Ingress...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	kubectl get ingress -n $$namespace; \
	echo "$(GREEN)–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:$(RESET)"; \
	kubectl describe ingress -n $$namespace

k8s-pvc-status: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å PersistentVolumeClaims
	@echo "$(BLUE)–°—Ç–∞—Ç—É—Å PersistentVolumeClaims...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	kubectl get pvc -n $$namespace; \
	echo "$(GREEN)–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:$(RESET)"; \
	kubectl describe pvc -n $$namespace

k8s-secret-view: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Secret (base64 decoded)
	@echo "$(BLUE)–°–æ–¥–µ—Ä–∂–∏–º–æ–µ Secret...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "Enter secret name (default: laravel-app-secret): " secret; \
	secret=$${secret:-laravel-app-secret}; \
	echo "$(GREEN)–°–æ–¥–µ—Ä–∂–∏–º–æ–µ secret $$secret:$(RESET)"; \
	kubectl get secret $$secret -n $$namespace -o jsonpath='{.data}' | jq -r 'to_entries[] | "\(.key): \(.value | @base64d)"'

k8s-configmap-view: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ ConfigMap
	@echo "$(BLUE)–°–æ–¥–µ—Ä–∂–∏–º–æ–µ ConfigMap...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "Enter configmap name (default: laravel-app-config): " configmap; \
	configmap=$${configmap:-laravel-app-config}; \
	echo "$(GREEN)–°–æ–¥–µ—Ä–∂–∏–º–æ–µ configmap $$configmap:$(RESET)"; \
	kubectl get configmap $$configmap -n $$namespace -o yaml

k8s-exec-all: ## –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤–æ –≤—Å–µ—Ö pods
	@echo "$(BLUE)–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤–æ –≤—Å–µ—Ö pods...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "Enter command to execute: " cmd; \
	echo "$(GREEN)–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã '$$cmd' –≤–æ –≤—Å–µ—Ö pods...$(RESET)"; \
	for pod in $$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[*].metadata.name}'); do \
		echo "$(YELLOW)Pod: $$pod$(RESET)"; \
		kubectl exec -n $$namespace $$pod -c php-fpm -- $$cmd; \
		echo ""; \
	done

k8s-copy-file: ## –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª –≤ pod
	@echo "$(BLUE)–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –≤ pod...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "Enter local file path: " local_file; \
	read -p "Enter remote file path: " remote_file; \
	pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ $$local_file –≤ $$pod:$$remote_file$(RESET)"; \
	kubectl cp $$local_file $$namespace/$$pod:$$remote_file -c php-fpm

k8s-copy-from: ## –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª –∏–∑ pod
	@echo "$(BLUE)–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ pod...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	read -p "Enter remote file path: " remote_file; \
	read -p "Enter local file path: " local_file; \
	pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ $$pod:$$remote_file –≤ $$local_file$(RESET)"; \
	kubectl cp $$namespace/$$pod:$$remote_file $$local_file -c php-fpm

k8s-dashboard-install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Kubernetes Dashboard
	@echo "$(BLUE)–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kubernetes Dashboard...$(RESET)"
	kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml
	@echo "$(GREEN)Dashboard —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ namespace: kubernetes-dashboard$(RESET)"
	@echo "$(YELLOW)–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: make k8s-dashboard-access$(RESET)"

k8s-dashboard-token: ## –°–æ–∑–¥–∞—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Dashboard
	@echo "$(BLUE)–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –¥–ª—è Dashboard...$(RESET)"
	@if ! kubectl get serviceaccount admin-user -n kubernetes-dashboard >/dev/null 2>&1; then \
		echo "$(YELLOW)–°–æ–∑–¥–∞–Ω–∏–µ ServiceAccount...$(RESET)"; \
		kubectl create serviceaccount admin-user -n kubernetes-dashboard; \
	fi
	@if ! kubectl get clusterrolebinding admin-user >/dev/null 2>&1; then \
		echo "$(YELLOW)–°–æ–∑–¥–∞–Ω–∏–µ ClusterRoleBinding...$(RESET)"; \
		kubectl create clusterrolebinding admin-user --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:admin-user; \
	fi
	@echo "$(GREEN)–¢–æ–∫–µ–Ω –¥–ª—è –≤—Ö–æ–¥–∞:$(RESET)"
	@kubectl -n kubernetes-dashboard create token admin-user

k8s-dashboard-access: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ Dashboard
	@echo "$(BLUE)–ó–∞–ø—É—Å–∫ –¥–æ—Å—Ç—É–ø–∞ –∫ Kubernetes Dashboard...$(RESET)"
	@echo "$(GREEN)Dashboard –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É:$(RESET)"
	@echo "$(GREEN)http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/$(RESET)"
	@echo "$(YELLOW)–ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –∫–æ–º–∞–Ω–¥–æ–π: make k8s-dashboard-token$(RESET)"
	@echo "$(YELLOW)–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏$(RESET)"
	kubectl proxy

k8s-dashboard-remove: ## –£–¥–∞–ª–∏—Ç—å Kubernetes Dashboard
	@echo "$(RED)–£–¥–∞–ª–µ–Ω–∏–µ Kubernetes Dashboard...$(RESET)"
	@read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å Dashboard? (yes/no): " confirm; \
	if [ "$$confirm" = "yes" ]; then \
		kubectl delete -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml; \
		kubectl delete clusterrolebinding admin-user 2>/dev/null || true; \
		echo "$(GREEN)Dashboard —É–¥–∞–ª–µ–Ω$(RESET)"; \
	else \
		echo "$(YELLOW)–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞$(RESET)"; \
	fi

k8s-fix-certs: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏ Microk8s
	@echo "$(BLUE)–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏...$(RESET)"
	./k8s/fix-microk8s-certs.sh

k8s-fix-image-pull: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É ImagePullBackOff
	@echo "$(BLUE)–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã ImagePullBackOff...$(RESET)"
	./k8s/fix-image-pull.sh

k8s-tinker: ## –û—Ç–∫—Ä—ã—Ç—å tinker –≤ Kubernetes (–±–µ–∑ –∏—Å—Ç–æ—Ä–∏–∏)
	@echo "$(BLUE)–û—Ç–∫—Ä—ã—Ç–∏–µ tinker –≤ Kubernetes...$(RESET)"
	@read -p "Enter namespace (default: laravel-app-dev): " namespace; \
	namespace=$${namespace:-laravel-app-dev}; \
	pod=$$(kubectl get pods -n $$namespace -l app.kubernetes.io/name=laravel-app -o jsonpath='{.items[0].metadata.name}'); \
	echo "$(GREEN)–û—Ç–∫—Ä—ã—Ç–∏–µ tinker –≤ pod $$pod$(RESET)"; \
	kubectl exec -n $$namespace -it $$pod -c php-fpm -- env PSYSH_HISTORY="" php artisan tinker

k8s-tn: k8s-tinker

# =============================================================================
# Docker –¥–ª—è Kubernetes
# =============================================================================

docker-build-k8s: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑ –¥–ª—è Kubernetes (production)
	@echo "$(BLUE)–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –¥–ª—è Kubernetes...$(RESET)"
	./docker/k8s/build-and-push.sh production

docker-build-k8s-dev: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑ –¥–ª—è Kubernetes (development)
	@echo "$(BLUE)–°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...$(RESET)"
	./docker/k8s/build-and-push.sh development

docker-push-k8s: ## –°–æ–±—Ä–∞—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±—Ä–∞–∑ –≤ Microk8s registry
	@echo "$(BLUE)–°–±–æ—Ä–∫–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ –≤ Microk8s registry...$(RESET)"
	./docker/k8s/build-and-push.sh

# =============================================================================
# –õ–∏–Ω—Ç–∏–Ω–≥ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
# =============================================================================

lint: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ª–∏–Ω—Ç–µ—Ä—ã –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ª–∏–Ω—Ç–µ—Ä–æ–≤ –≤ Docker...$(RESET)"
	@echo "$(BLUE)üì¶ JavaScript/TypeScript lint...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npm run lint:js
	@echo "$(BLUE)üíÑ CSS/SCSS lint...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npm run lint:css
	@echo "$(BLUE)üêò PHP lint...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm php-dev composer lint
	@echo "$(GREEN)‚úÖ –í—Å–µ –ª–∏–Ω—Ç–µ—Ä—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!$(RESET)"

lint-js: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ JavaScript/TypeScript –ª–∏–Ω—Ç–µ—Ä –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ JavaScript/TypeScript –ª–∏–Ω—Ç–µ—Ä–∞ –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npm run lint:js

lint-css: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ CSS/SCSS –ª–∏–Ω—Ç–µ—Ä –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ CSS/SCSS –ª–∏–Ω—Ç–µ—Ä–∞ –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npm run lint:css

lint-php: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ PHP –ª–∏–Ω—Ç–µ—Ä –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ PHP –ª–∏–Ω—Ç–µ—Ä–∞ –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm php-dev composer lint

lint-fix: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ –æ—à–∏–±–∫–∏ –ª–∏–Ω—Ç–µ—Ä–æ–≤ –≤ Docker
	@echo "$(GREEN)–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –ª–∏–Ω—Ç–µ—Ä–æ–≤ –≤ Docker...$(RESET)"
	@echo "$(BLUE)üì¶ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ JavaScript/TypeScript...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npm run lint:js
	@echo "$(BLUE)üíÑ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CSS/SCSS...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npm run lint:css
	@echo "$(BLUE)üêò –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PHP...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm php-dev composer lint-fix
	@echo "$(GREEN)‚úÖ –í—Å–µ –æ—à–∏–±–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!$(RESET)"

lint-fix-js: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ JavaScript/TypeScript –æ—à–∏–±–∫–∏ –≤ Docker
	@echo "$(GREEN)–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ JavaScript/TypeScript –æ—à–∏–±–æ–∫ –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npm run lint:js

lint-fix-css: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ CSS/SCSS –æ—à–∏–±–∫–∏ –≤ Docker
	@echo "$(GREEN)–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CSS/SCSS –æ—à–∏–±–æ–∫ –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npm run lint:css

lint-fix-php: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ PHP –æ—à–∏–±–∫–∏ –≤ Docker
	@echo "$(GREEN)–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ PHP –æ—à–∏–±–æ–∫ –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm php-dev composer lint-fix

prettier: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Prettier –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ Prettier –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npm run prettier:check

prettier-fix: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞ —Å Prettier –≤ Docker
	@echo "$(GREEN)–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å Prettier –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npx prettier --write .

stylelint: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å Stylelint –¥–ª—è CSS/SCSS –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ Stylelint –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npm run stylelint

stylelint-fix: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å CSS/SCSS —Å Stylelint –≤ Docker
	@echo "$(GREEN)–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ CSS/SCSS —Å Stylelint –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npx stylelint --fix resources/css/

eslint: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å ESLint –¥–ª—è JavaScript/TypeScript –≤ Docker
	@echo "$(GREEN)–ó–∞–ø—É—Å–∫ ESLint –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npx eslint resources/js --ext .js,.vue

eslint-fix: ## –ò—Å–ø—Ä–∞–≤–∏—Ç—å JavaScript/TypeScript —Å ESLint –≤ Docker
	@echo "$(GREEN)–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ JavaScript/TypeScript —Å ESLint –≤ Docker...$(RESET)"
	docker compose -f docker-compose.dev.yml run -T --rm node-dev npx eslint resources/js --ext .js,.vue --fix

# =============================================================================
# –ê–ª–∏–∞—Å—ã –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
# =============================================================================
t: test
tu: test-unit
tf: test-feature
tc: test-coverage
tp: test-parallel
tw: test-watch
up: sail-up
down: sail-down
build: sail-build
shell: sail-shell
hd: helm-deploy-dev
hs: helm-deploy-staging
hp: helm-deploy-prod

# Kubernetes –∞–ª–∏–∞—Å—ã
k8s-l: k8s-logs
k8s-lp: k8s-logs-php
k8s-ln: k8s-logs-nginx
k8s-lq: k8s-logs-queue
k8s-s: k8s-shell
k8s-sp: k8s-shell-php
k8s-sn: k8s-shell-nginx
k8s-sq: k8s-shell-queue
k8s-sf: k8s-shell-first
k8s-pf: k8s-port-forward
k8s-st: k8s-status
k8s-d: k8s-describe
k8s-sc: k8s-scale
k8s-sch: k8s-scale-helm
k8s-a: k8s-artisan
k8s-m: k8s-migrate
k8s-mf: k8s-migrate-fresh
k8s-se: k8s-seed
k8s-cc: k8s-cache-clear
k8s-cac: k8s-config-cache
k8s-qw: k8s-queue-work
k8s-qf: k8s-queue-failed
k8s-qr: k8s-queue-retry
k8s-qfl: k8s-queue-flush
k8s-r: k8s-restart
k8s-rb: k8s-rollback
k8s-rbt: k8s-rollback-to
k8s-rs: k8s-rollout-status
k8s-rh: k8s-rollout-history
k8s-t: k8s-top
k8s-e: k8s-events
k8s-i: k8s-ingress-status
k8s-pvc: k8s-pvc-status
k8s-sv: k8s-secret-view
k8s-cmv: k8s-configmap-view
k8s-ea: k8s-exec-all
k8s-cp: k8s-copy-file
k8s-cpf: k8s-copy-from 