#!/usr/bin/env sh

# Ensure PATH includes common binary locations
export PATH="/usr/local/bin:/usr/bin:/bin:$PATH"

echo "üöÄ Running pre-push checks in Docker containers..."

# Check if Docker is available with multiple methods
if [ -x "/usr/bin/docker" ]; then
    DOCKER_CMD="/usr/bin/docker"
elif command -v docker &> /dev/null; then
    DOCKER_CMD="docker"
else
    echo "‚ùå Docker is not available. Please install Docker first."
    exit 1
fi

# Check if Docker Compose is available
if $DOCKER_CMD compose version &> /dev/null; then
    echo "‚úÖ Docker Compose is available"
else
    echo "‚ùå Docker Compose is not available. Please install Docker Compose first."
    exit 1
fi

# Run security checks in PHP container
echo "üîí Running security checks..."
if ! $DOCKER_CMD compose -f docker-compose.dev.yml run -T --rm -e COMPOSER_CACHE_DIR=/tmp/composer-cache php-dev composer security; then
    echo "‚ùå Security checks failed!"
    exit 1
fi

# Run full test suite in PHP container
echo "üß™ Running full test suite..."
if ! $DOCKER_CMD compose -f docker-compose.dev.yml run -T --rm -e COMPOSER_CACHE_DIR=/tmp/composer-cache -e PEST_CACHE_DIR=/tmp/pest-cache php-dev composer test; then
    echo "‚ùå Tests failed!"
    exit 1
fi

# Check for any uncommitted changes
if ! git diff-index --quiet HEAD --; then
    echo "‚ö†Ô∏è  Warning: You have uncommitted changes!"
    echo "Consider committing them before pushing."
fi

# Check if we're on the main branch
current_branch=$(git branch --show-current)
if [ "$current_branch" = "main" ] || [ "$current_branch" = "develop" ]; then
    echo "‚ö†Ô∏è  Warning: You're pushing to $current_branch branch!"
    echo "Make sure this is intentional."
fi

echo "‚úÖ Pre-push checks completed!" 