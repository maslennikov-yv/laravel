name: Security Scan

on:
  schedule:
    - cron: '0 2 * * 1'  # Every Monday at 2 AM
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'

    - name: Install Composer dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Run Composer Security Check
      run: composer audit --format=json --no-interaction > security-report.json

    - name: Run PHP Security Checker
      run: |
        if command -v security-checker &> /dev/null; then
          security-checker security:check composer.lock
        else
          echo "Security checker not available, skipping..."
        fi

    - name: Run PHP CS Fixer Security Rules
      run: vendor/bin/php-cs-fixer fix --dry-run --diff --allow-risky=yes
      env:
        PHP_CS_FIXER_IGNORE_ENV: 1

    - name: Run PHPStan Security Analysis
      run: vendor/bin/phpstan analyse --level=8

    - name: Run Psalm Security Analysis
      if: hashFiles('psalm.xml') != ''
      run: |
        if [ -f "vendor/bin/psalm" ]; then
          vendor/bin/psalm --security-analysis
        else
          echo "Psalm not installed, skipping security analysis..."
        fi
      continue-on-error: true

    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.json
        retention-days: 30

  dependency-scan:
    runs-on: ubuntu-latest
    continue-on-error: true
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install NPM dependencies
      run: npm ci

    - name: Run NPM Audit
      run: npm audit --audit-level=moderate
      continue-on-error: true

    - name: Run Snyk Security Scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  container-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: docker build -t laravel-app:security-scan -f docker/k8s/Dockerfile .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'laravel-app:security-scan'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  code-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: php

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3 